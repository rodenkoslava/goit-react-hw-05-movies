{"version":3,"file":"static/js/546.e993464f.chunk.js","mappings":"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","sources":["api/api.js","pages/MovieDetailsPage/MovieDetailsPage.styled.js","components/ButtonBack/ButtonBack.styled.js","components/ButtonBack/ButtonBack.jsx","pages/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=9ea4827a4458d4f248b702dc6c1b9923';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?${API_KEY}`);\n  return data;\n};\n\nexport const searchMoviesByKeyword = async query => {\n  const { data } = await axios.get(\n    `/search/movie?${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n","import styled from 'styled-components';\n\nexport const DetailsContainer = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const Button = styled.button`\n  background-color: #4caf50;\n  border: none;\n  color: white;\n  padding: 15px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 4px 2px;\n  cursor: pointer;\n`;\n\nexport const InfoBox = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const MovieImage = styled.img`\n  height: auto;\n  max-width: 300px;\n  height: auto;\n  margin-right: 20px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin: 10px 0;\n`;\n\nexport const Score = styled.p`\n  margin: 5px 0;\n`;\n\nexport const Overview = styled.span`\n  margin: 10px 0;\n`;\n\nexport const Genres = styled.span`\n  margin: 10px 0;\n`;\n\nexport const AdditionalInfo = styled.div`\n  margin-top: 20px;\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n`;\n\nexport const InfoHeading = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const InfoList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 10px;\n`;\n\nexport const InfoItem = styled.li`\n  margin-bottom: 10px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-decoration: none;\n  width: 100px;\n  margin: 10px;\n  padding: 5px;\n  border: none;\n  background: transparent;\n  border-radius: 4px;\n  outline: 2px solid black;\n\n  :hover {\n    color: white;\n    background-color: tomato;\n  }\n`;\n\nexport const LinkBack = styled(Link)`\n  text-decoration: none;\n`;\n","import { FiArrowLeftCircle } from 'react-icons/fi';\nimport { Button, LinkBack } from './ButtonBack.styled';\n\nconst ButtonBack = ({ to }) => {\n  return (\n    <LinkBack to={to}>\n      <Button>\n        <FiArrowLeftCircle /> Come Back\n      </Button>\n    </LinkBack>\n  );\n};\n\nexport default ButtonBack;\n","import { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../api/api';\nimport {\n  AdditionalInfo,\n  DetailsContainer,\n  Genres,\n  InfoBox,\n  InfoHeading,\n  InfoItem,\n  InfoList,\n  MovieImage,\n  MovieTitle,\n  Overview,\n  Score,\n} from './MovieDetailsPage.styled';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\nconst MoviesDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [moviesDetails, setMoviesDetails] = useState(null);\n  const backLinkRef = useRef(location);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const details = await fetchMovieDetails(movieId);\n        setMoviesDetails(details);\n      } catch (error) {\n        console.error('Error fetching movie details:', error.message);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n  if (!moviesDetails) return;\n  const { poster_path, title, genres, overview, vote_average, release_date } =\n    moviesDetails;\n  return (\n    <DetailsContainer>\n      <ButtonBack to={backLinkRef.current.state?.from ?? '/'} />\n      <InfoBox>\n        <div>\n          <MovieImage\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300${poster_path}`\n                : defaultImg\n            }\n            alt={title}\n          />\n        </div>\n        <div>\n          <MovieTitle>\n            {title} {release_date?.substr(0, 4)}\n          </MovieTitle>\n          <Score>User Score: {Math.floor(vote_average * 10)}%</Score>\n          <Overview>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n          </Overview>\n          <Genres>\n            <h2>Genres</h2>\n            <ul>\n              {genres.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ul>\n          </Genres>\n        </div>\n      </InfoBox>\n      <AdditionalInfo>\n        <InfoHeading>Additional information</InfoHeading>\n        <InfoList>\n          <InfoItem>\n            <Link to={`cast`}>Cast</Link>\n          </InfoItem>\n          <InfoItem>\n            <Link to={`reviews`}>Reviews</Link>\n          </InfoItem>\n        </InfoList>\n      </AdditionalInfo>\n      <Outlet />\n    </DetailsContainer>\n  );\n};\nexport default MoviesDetails;\n"],"names":["axios","API_KEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","stop","apply","arguments","searchMoviesByKeyword","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","results","_x4","DetailsContainer","styled","_templateObject","_taggedTemplateLiteral","InfoBox","_templateObject2","_templateObject3","MovieImage","_templateObject4","MovieTitle","_templateObject5","Score","_templateObject6","Overview","_templateObject7","Genres","_templateObject8","AdditionalInfo","_templateObject9","InfoHeading","_templateObject10","InfoList","_templateObject11","InfoItem","_templateObject12","Button","LinkBack","Link","to","_jsx","children","_jsxs","FiArrowLeftCircle","_backLinkRef$current$","_backLinkRef$current$2","useParams","location","useLocation","_useState","useState","_useState2","_slicedToArray","moviesDetails","setMoviesDetails","backLinkRef","useRef","useEffect","fetchData","details","t0","console","error","message","poster_path","title","genres","overview","vote_average","release_date","ButtonBack","current","state","from","src","alt","substr","Math","floor","map","id","name","Outlet"],"sourceRoot":""}